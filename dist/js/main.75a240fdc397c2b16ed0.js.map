{"version":3,"sources":["webpack://webpack-workflow/webpack/bootstrap","webpack://webpack-workflow/webpack/runtime/global","webpack://webpack-workflow/webpack/runtime/publicPath","webpack://webpack-workflow/./src/js/modules/global/global-variables.js","webpack://webpack-workflow/./src/js/modules/omdb-api/omdb-api.js","webpack://webpack-workflow/./src/js/modules/helpers/redirect.js","webpack://webpack-workflow/./src/js/modules/helpers/generateId.js","webpack://webpack-workflow/./src/js/modules/storage/local-session-storage.js","webpack://webpack-workflow/./src/js/modules/login/patterns.js","webpack://webpack-workflow/./src/js/modules/login/form-login-data-user.js","webpack://webpack-workflow/./src/js/modules/login/form-login-validations.js","webpack://webpack-workflow/./src/js/modules/search/set-get-last-search.js","webpack://webpack-workflow/./src/js/modules/favorites/favorites-validation.js","webpack://webpack-workflow/./src/js/modules/favorites/set-del-favorites.js","webpack://webpack-workflow/./src/js/modules/omdb-api/call-omdb-api.js","webpack://webpack-workflow/./src/js/modules/helpers/pagination.js","webpack://webpack-workflow/./src/js/modules/show/show-movies.js","webpack://webpack-workflow/./src/js/modules/show/show-modal.js","webpack://webpack-workflow/./src/js/modules/show/show-favorites-movies.js","webpack://webpack-workflow/./src/js/modules/theme/light-dark-mode.js","webpack://webpack-workflow/./src/js/modules/session/session-validate.js","webpack://webpack-workflow/./src/js/modules/helpers/network-status.js","webpack://webpack-workflow/./src/js/modules/helpers/scrollTopButton.js","webpack://webpack-workflow/./src/js/index.js","webpack://webpack-workflow/./src/js/modules/show/show-last-search-movies.js","webpack://webpack-workflow/./src/js/modules/session/close-session.js","webpack://webpack-workflow/./src/js/modules/favorites/get-total-favorite-movies.js"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","d","w","globalVariables","arrayUsers","page","moviesForPage","API_KEY","URL_BASE","END_POINT_MOVIE","END_POINT_MOVIES","options","method","redirectToLogin","href","redirectToSearch","ids","generateId","id","Math","random","toString","substr","undefined","find","i","push","localStorageAddUsers","localStorage","setItem","JSON","stringify","sessionStorageAddUser","user","sessionStorage","getLocalStorage","parse","getItem","getSessionStorage","patternUserName","patternPassword","$formLoginInputs","querySelectorAll","$formLogin","getElementById","setLocalStorageLastSearch","lastSearch","userID","userLS","getLocalStorageLastSearch","$favoritesDiv","querySelector","pathname","includes","favorites","classList","remove","add","imdbId","indexId","findIndex","favorite","splice","favoritesValidation","$errorMessageContainerSearch","$errorMessageContainerFavorites","apiUrlQuery","response","dataJson","url","fetch","json","messageUser","ErrorMessage","innerHTML","$paginationDiv","$paginationLabelLast","$paginationLabelNext","$paginationSpan","$moviesDiv","$divSearchLoader","$lastSearchDiv","$lastSearchSpan","$lastResultDiv","$lastResultSpan","movies","$fragment","createDocumentFragment","totalMovies","totalPages","textContent","callOmdbApi","Response","Search","totalResults","ceil","pagination","forEach","movie","$movieDiv","createElement","$movieButton","imdbID","setAttribute","$movieImage","Poster","alt","Title","$movieSpanTitle","$movieSpanYear","Year","$movieSpanType","Type","$movieSpanImdbId","appendChild","$modalMovies","$movieDivImgageButton","$movieDivInfo","$movieSpanRuntime","Runtime","$movieSpanLanguage","Language","$movieSpanGender","Genre","$movieSpanCountry","Country","$movieSpanActors","Actors","$movieSpanDirector","Director","$movieSpanPlot","Plot","sessionActive","pageLocation","$favoritesLoader","$favoritesMoviesContainer","$favoritesSpan","counter","$favoriteMovieContainer","$favoriteMovieButton","$favoriteMovieImage","$favoriteMovieSpanTitle","$favoriteMovieSpanYear","$favoriteMovieSpanType","$favoriteMovieSpanImdbId","$selectors","$searchDivIcon","lightMode","ele","theme","darkMode","$containerNetworkStatus","$footer","navigator","onLine","setTimeout","insertAdjacentElement","$scrollTopButton","$formLoginLoader","$searchUser","$searchSpan","$favoritesButton","$formSearch","$favoritesButtonHome","addEventListener","input","$span","name","title","target","matches","value","pattern","alert","RegExp","exec","$inputUsernameValue","$inputPasswordValue","regexpUserName","regexpPassword","preventDefault","username","password","userExist","createUser","localStorageValidateUsers","toLowerCase","reset","reload","showMovies","showLastSearchMovies","sessionUser","event","removeItem","icon","userQuery","search","focus","$element","toggle","getAttribute","localStorageSetDelFavorites","contains","showMovieModal","element","children","dataset","imdbid","showFavoritesMovies","parentElement","total","getLocalStorageTotalFavoritesMovies","pageYOffset","documentElement","scrollTop","behavior","top","networkStatus"],"mappings":"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","file":"js/main.75a240fdc397c2b16ed0.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","//* ===============================================================================================\r\n//* VARIABLES GLOBALES\r\n//* ===============================================================================================\r\nconst d = document;\r\nconst w = window;\r\n\r\nconst starIcon = '⭐';\r\nconst sunIcon = '☀️';\r\nconst moonIcon = '🌙';\r\n\r\nconst globalVariables = {\r\n arrayUsers: [],\r\n page: 1,\r\n moviesForPage: 10,\r\n};\r\n\r\nexport { d, w, starIcon, sunIcon, moonIcon, globalVariables };\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* OMDB API (DATOS Y END POINTS)\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst KEY = '7bdaf2a9';\r\nconst DOMAIN = 'https://www.omdbapi.com';\r\nconst API_KEY = `/?apikey=${KEY}`;\r\nconst URL_BASE = `${DOMAIN}${API_KEY}&`;\r\nconst END_POINT_MOVIE = `${URL_BASE}i=`;\r\nconst END_POINT_MOVIES = `${URL_BASE}s=`;\r\nconst options = {\r\n method: 'GET',\r\n 'Content-type': 'application/json',\r\n};\r\n\r\nexport { KEY, DOMAIN, API_KEY, END_POINT_MOVIE, END_POINT_MOVIES, options };\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIONES RELACIONADAS AL ENRUTAMIENTO HACIA LAS PAGINAS DE LA APLICACIÓN\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN QUE DIRIGE USUARIOS AL LOGIN (index.html)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst redirectToLogin = () => {\r\n document.location.href = 'index.html';\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* FUNCIÓN QUE DIRIGE USUARIOS AL SEARCH HOME (search.html)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst redirectToSearch = () => {\r\n document.location.href = 'search.html';\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN QUE DIRIGE USUARIOS A FAVORITOS (favorites.html)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst redirectToFavorites = () => {\r\n document.location.href = 'favorites.html';\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\nexport { redirectToLogin, redirectToSearch, redirectToFavorites };\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE GENERA UN ID PARA EL USUARIO\r\n//* * Genera un id numérico de 13 dígitos y comprueba que no se generen ids repetidos.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst ids = [];\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (generateId)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst generateId = () => {\r\n const id = Math.random().toString(16).substr(2);\r\n const exists = ids.find((i) => i === id);\r\n if (exists === undefined) {\r\n  ids.push(id);\r\n } else {\r\n  generateId();\r\n }\r\n return id;\r\n};\r\n\r\nexport default generateId;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIONES RELACIONADAS AL LOCAL Y SESSION STORAGE\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { globalVariables } from '../global/global-variables';\r\nimport { redirectToSearch } from '../helpers/redirect';\r\nimport generateId from '../helpers/generateId';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 1.- FUNCIÓN QUE INCLUYE USUARIOS AL LOCALSTORAGE\r\n//* ---------------------------------------------------------------------------------------------\r\nconst localStorageAddUsers = () => {\r\n localStorage.setItem('users', JSON.stringify(globalVariables.arrayUsers));\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 2.- FUNCIÓN QUE INCLUYE USUARIOS AL SESSIONSTORAGE\r\n//* ---------------------------------------------------------------------------------------------\r\nconst sessionStorageAddUser = (user) => {\r\n sessionStorage.setItem('session', JSON.stringify(user));\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 3.- FUNCIÓN QUE CREA NUEVOS USUARIOS\r\n//*     Agrega usuarios en el arreglo (arrayUsers)\r\n//*     Agrega usuarios en el local store (localStorageAddUsers())\r\n//*     Agrega usuario en el session storage (sessionStorageAddUser())\r\n//* ---------------------------------------------------------------------------------------------\r\nconst createUser = (name, password) => {\r\n const user = {\r\n  id: generateId(),\r\n  name,\r\n  password,\r\n  lastSearch: '',\r\n  theme: 'darkmode',\r\n  favorites: [],\r\n };\r\n\r\n globalVariables.arrayUsers.push(user);\r\n localStorageAddUsers();\r\n sessionStorageAddUser(user);\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 4.- FUNCION QUE ENTREGA LOS USUARIOS SI EXISTE EN EL LOCAL STORAGE\r\n//* ---------------------------------------------------------------------------------------------\r\nconst getLocalStorage = () => JSON.parse(localStorage.getItem('users'));\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 5.- FUNCION QUE ENTREGA LA SESIÓN SI EXISTE EN EL SESSION STORAGE\r\n//* ---------------------------------------------------------------------------------------------\r\nconst getSessionStorage = () => JSON.parse(sessionStorage.getItem('session'));\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 6.- FUNCIÓN QUE VALIDA USUARIOS EXISTENTES EN EL LOCALSTORAGE\r\n//*     Si el usuario existe crea la sesión. sessionStorageAddUsers()\r\n//*     Si el usuario existe valida si tiene un tema seleccionado. validateTheme()\r\n//*     Si el usuario NO existe crea el usuario e inicia la sesión. createUsers()\r\n//* ---------------------------------------------------------------------------------------------\r\nconst localStorageValidateUsers = (username, password) => {\r\n globalVariables.arrayUsers = getLocalStorage();\r\n let userExist = false;\r\n\r\n if (globalVariables.arrayUsers === null) {\r\n  globalVariables.arrayUsers = [];\r\n } else {\r\n  globalVariables.arrayUsers.find((user) => {\r\n   if (user.name === username && user.password === password) {\r\n    userExist = true;\r\n    sessionStorageAddUser(user);\r\n   } else {\r\n    userExist = false;\r\n   }\r\n\r\n   return userExist;\r\n  });\r\n }\r\n\r\n if (userExist === false) {\r\n  createUser(username, password);\r\n  redirectToSearch();\r\n } else {\r\n  redirectToSearch();\r\n }\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\nexport {\r\n createUser,\r\n localStorageValidateUsers,\r\n getLocalStorage,\r\n getSessionStorage,\r\n localStorageAddUsers,\r\n sessionStorageAddUser,\r\n};\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* PATRONES DE EXPRESIONES REGULARES\r\n//* Usado por: (form-login-data-user - form-login-validations)\r\n//* ===============================================================================================\r\nconst patternUserName = '^([A-Za-z]{6,12})$';\r\nconst patternPassword = '^([A-Za-z0-9]{6,8})$';\r\n//* ===============================================================================================\r\n\r\nexport { patternUserName, patternPassword };\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE RECIBE LOS DATOS INTRODUCIDOS POR EL USUARIO DE FORMA REACTIVA\r\n//*         * Recive los datos del usuario y realiza una primera validación.\r\n//*         * Informa al usuario sobre el formato requerido de los datos.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, w } from '../global/global-variables';\r\nimport { patternUserName, patternPassword } from './patterns';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $formLoginInputs = d.querySelectorAll('.login-input');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (formLoginDataUser)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst formLoginDataUser = () => {\r\n $formLoginInputs.forEach((input) => {\r\n  const $span = d.createElement('span');\r\n  $span.id = input.name;\r\n  $span.textContent = input.title;\r\n  $span.classList.add('form-input-error', 'none');\r\n\r\n  input.insertAdjacentElement('afterend', $span);\r\n });\r\n\r\n d.addEventListener('keyup', (e) => {\r\n  if (e.target.matches('.login-input')) {\r\n   const { name, title, value } = e.target;\r\n   let { pattern } = e.target;\r\n\r\n   if (value === '') {\r\n    d.getElementById(name).classList.add('is-active');\r\n    if (name === 'username') {\r\n     d.getElementById(name).textContent = 'Nombre de usuario requerido';\r\n    } else {\r\n     d.getElementById(name).textContent = 'Contraseña requerida';\r\n    }\r\n   } else {\r\n    d.getElementById(name).textContent = title;\r\n   }\r\n\r\n   if (name === 'username' && (!pattern || pattern === '' || pattern !== patternUserName)) {\r\n    pattern = patternUserName;\r\n    // eslint-disable-next-line no-alert\r\n    alert('Alerta: Posible manipulación inadecuada del html en línea. (username patern)');\r\n    w.location.reload();\r\n   }\r\n\r\n   if (name === 'password' && (!pattern || pattern === '' || pattern !== patternPassword)) {\r\n    pattern = patternPassword;\r\n    // eslint-disable-next-line no-alert\r\n    alert('Alerta: Posible manipulación inadecuada del html en línea. (password patern)');\r\n    w.location.reload();\r\n   }\r\n\r\n   if (value.length >= 0) {\r\n    const regexp = new RegExp(pattern);\r\n\r\n    if (regexp.exec(value)) {\r\n     d.getElementById(name).classList.remove('is-active');\r\n    } else {\r\n     d.getElementById(name).classList.add('is-active');\r\n    }\r\n   }\r\n  }\r\n });\r\n};\r\n\r\nexport default formLoginDataUser;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE VALIDA LOS DATOS INTRODUCIDOS POR EL USUARIO EN EL FORMULARIO LOGIN\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { patternUserName, patternPassword } from './patterns';\r\nimport { d } from '../global/global-variables';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $formLogin = d.getElementById('formLogin');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (formLoginValidations)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst formLoginValidations = () => {\r\n const $inputUsernameValue = $formLogin.username.value;\r\n const $inputPasswordValue = $formLogin.password.value;\r\n const regexpUserName = new RegExp(patternUserName);\r\n const regexpPassword = new RegExp(patternPassword);\r\n let response = false;\r\n\r\n if ($inputUsernameValue === '' || $inputPasswordValue === '') {\r\n  response = false;\r\n } else if (\r\n  !regexpUserName.exec($inputUsernameValue) ||\r\n  !regexpPassword.exec($inputPasswordValue)\r\n ) {\r\n  response = false;\r\n } else {\r\n  response = true;\r\n }\r\n\r\n return response;\r\n};\r\n\r\nexport default formLoginValidations;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIONES SET Y GET LAST SEARCH.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { globalVariables } from '../global/global-variables';\r\nimport {\r\n getLocalStorage,\r\n getSessionStorage,\r\n localStorageAddUsers,\r\n sessionStorageAddUser,\r\n} from '../storage/local-session-storage';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN QUE INCLUYE LA ULTIMA BÚSQUEDA EN EL LOCAL Y SESSION STORAGE\r\n//* ---------------------------------------------------------------------------------------------\r\nconst setLocalStorageLastSearch = (lastSearch) => {\r\n const userID = getSessionStorage().id;\r\n globalVariables.arrayUsers = getLocalStorage();\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  const userLS = user;\r\n  if (userLS.id === userID) {\r\n   userLS.lastSearch = lastSearch;\r\n   sessionStorageAddUser(user);\r\n   localStorageAddUsers();\r\n   return true;\r\n  }\r\n  return false;\r\n });\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN QUE REGRESA LA ULTIMA BÚSQUEDA EN EL LOCAL STORAGE\r\n//* ---------------------------------------------------------------------------------------------\r\nconst getLocalStorageLastSearch = () => {\r\n const userID = getSessionStorage().id;\r\n globalVariables.arrayUsers = getLocalStorage();\r\n let lastSearch;\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  if (user.id === userID) {\r\n   lastSearch = user.lastSearch;\r\n   return true;\r\n  }\r\n  return false;\r\n });\r\n return lastSearch;\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\nexport { setLocalStorageLastSearch, getLocalStorageLastSearch };\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE VALIDA SI EL USUARIO TIENE FAVORITOS EN EL LOCAL STORAGE\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, w, globalVariables } from '../global/global-variables';\r\nimport { getLocalStorage, getSessionStorage } from '../storage/local-session-storage';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $favoritesDiv = d.querySelector('.main-search__favorites');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\nconst favoritesValidation = () => {\r\n if (w.location.pathname.includes('/search.html')) {\r\n  const userID = getSessionStorage().id;\r\n  globalVariables.arrayUsers = getLocalStorage();\r\n\r\n  globalVariables.arrayUsers.find((user) => {\r\n   if (user.id === userID) {\r\n    if (user.favorites.length > 0) {\r\n     $favoritesDiv.classList.remove('none');\r\n     return true;\r\n    }\r\n    $favoritesDiv.classList.add('none');\r\n   }\r\n   return false;\r\n  });\r\n }\r\n};\r\n\r\nexport default favoritesValidation;\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE INCLUYE Y ELIMINA FAVORITOS EN EL LOCAL Y SESSION STORAGE.\r\n//*   Valida si el favorito ya fue agregado o no (Agrega - Elimina).\r\n//*   Activa o Desactiva el botón de favoritos en el menú principal.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { globalVariables } from '../global/global-variables';\r\nimport favoritesValidation from './favorites-validation';\r\nimport {\r\n getLocalStorage,\r\n getSessionStorage,\r\n sessionStorageAddUser,\r\n localStorageAddUsers,\r\n} from '../storage/local-session-storage';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (localStorageSetDelFavorites)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst localStorageSetDelFavorites = (imdbId) => {\r\n //* -----------------------------------------------------------------------------------------\r\n //* Agrega o Elimina favoritos\r\n //* -----------------------------------------------------------------------------------------\r\n const userID = getSessionStorage().id;\r\n globalVariables.arrayUsers = getLocalStorage();\r\n\r\n const favorites = {\r\n  imdbId,\r\n };\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  if (user.id === userID) {\r\n   const indexId = user.favorites.findIndex((favorite) => favorite.imdbId === imdbId);\r\n\r\n   if (indexId === -1) {\r\n    user.favorites.push(favorites);\r\n   } else {\r\n    user.favorites.splice(indexId, 1);\r\n   }\r\n\r\n   sessionStorageAddUser(user);\r\n   localStorageAddUsers();\r\n  }\r\n  return false;\r\n });\r\n //* -----------------------------------------------------------------------------------------\r\n\r\n //* -----------------------------------------------------------------------------------------\r\n //* Activa o Desactiva botón de favoritos\r\n //* -----------------------------------------------------------------------------------------\r\n favoritesValidation();\r\n //* -----------------------------------------------------------------------------------------\r\n};\r\n\r\nexport default localStorageSetDelFavorites;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE LLAMA A LA API DE OMDB\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { options } from './omdb-api';\r\nimport { d } from '../global/global-variables';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $errorMessageContainerSearch = d.querySelector('.main-search__errorMessages');\r\nconst $errorMessageContainerFavorites = d.querySelector('.main-favorites__errorMessages');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (callOmdbApi)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst callOmdbApi = async (apiUrlQuery) => {\r\n const url = apiUrlQuery;\r\n let response;\r\n let dataJson;\r\n\r\n try {\r\n  response = await fetch(url, options);\r\n  dataJson = await response.json();\r\n } catch (Error) {\r\n  const ErrorMessage = Error.toString();\r\n  let ErrorCode;\r\n  let messageUser;\r\n\r\n  if (ErrorMessage === 'TypeError: Failed to fetch') {\r\n   ErrorCode = '001';\r\n   messageUser = `\r\n        <p>ERROR CODE: ${ErrorCode}</p>\r\n        <p>SIN RESPUESTA DE LA APLICACIÓN</p>\r\n        <p>VALIDE LA CONEXIÓN A INTERNET</p>\r\n      `;\r\n  } else {\r\n   messageUser = `<p>${ErrorMessage}</p>`;\r\n  }\r\n\r\n  if ($errorMessageContainerSearch) {\r\n   $errorMessageContainerSearch.innerHTML = messageUser;\r\n  } else if ($errorMessageContainerFavorites) {\r\n   $errorMessageContainerFavorites.innerHTML = messageUser;\r\n  }\r\n }\r\n return { response, dataJson };\r\n};\r\n\r\nexport default callOmdbApi;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE MANEJA LA PAGINACIÓN\r\n//* * Muestra el número de la página.\r\n//* * Muestra y oculta botones Last y Next.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, globalVariables } from '../global/global-variables';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $paginationDiv = d.querySelector('.main-search__pagination');\r\nconst $paginationLabelLast = d.querySelector('.main-search__pagination__last');\r\nconst $paginationLabelNext = d.querySelector('.main-search__pagination__next');\r\nconst $paginationSpan = d.querySelector('.main-search__pagination__span');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (pagination)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst pagination = (totalPages) => {\r\n $paginationSpan.textContent = globalVariables.page;\r\n\r\n if (globalVariables.page === 1 && totalPages === 1) {\r\n  $paginationDiv.classList.add('none');\r\n } else if (globalVariables.page === 1 && totalPages > 1) {\r\n  $paginationDiv.classList.remove('none');\r\n  $paginationLabelNext.classList.remove('none');\r\n  $paginationLabelLast.classList.add('none');\r\n } else if (globalVariables.page > 1 && globalVariables.page < totalPages) {\r\n  $paginationDiv.classList.remove('none');\r\n  $paginationLabelLast.classList.remove('none');\r\n  $paginationLabelNext.classList.remove('none');\r\n } else if (globalVariables.page > 1 && globalVariables.page >= totalPages) {\r\n  $paginationDiv.classList.remove('none');\r\n  $paginationLabelLast.classList.remove('none');\r\n  $paginationLabelNext.classList.add('none');\r\n }\r\n};\r\n\r\nexport default pagination;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIONES RELACIONADAS A MOSTRAR LAS PELICULAS\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, w, starIcon, globalVariables } from '../global/global-variables';\r\nimport { getLocalStorageLastSearch } from '../search/set-get-last-search';\r\nimport { getLocalStorage, getSessionStorage } from '../storage/local-session-storage';\r\nimport callOmdbApi from '../omdb-api/call-omdb-api';\r\nimport pagination from '../helpers/pagination';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $moviesDiv = d.getElementById('moviesDiv');\r\nconst $divSearchLoader = d.getElementById('search-loader');\r\nconst $lastSearchDiv = d.querySelector('.main-search__lastSearch.none');\r\nconst $lastSearchSpan = d.querySelector('.main-search__lastSearch__span');\r\nconst $errorMessageContainerSearch = d.querySelector('.main-search__errorMessages');\r\nconst $lastResultDiv = d.querySelector('.main-search__lastResult');\r\nconst $lastResultSpan = d.querySelector('.main-search__lastResult__span');\r\nconst $paginationDiv = d.querySelector('.main-search__pagination');\r\nconst $favoritesDiv = d.querySelector('.main-search__favorites');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (showMovies)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst showMovies = async (apiUrlQuery) => {\r\n const lastSearch = getLocalStorageLastSearch();\r\n const $fragment = d.createDocumentFragment();\r\n let movies;\r\n let totalMovies = 0;\r\n let totalPages = 0;\r\n\r\n $divSearchLoader.classList.remove('none');\r\n $moviesDiv.classList.add('none');\r\n\r\n $lastSearchDiv.classList.remove('none');\r\n $lastSearchSpan.textContent = lastSearch;\r\n\r\n $errorMessageContainerSearch.classList.add('none');\r\n\r\n try {\r\n  const { dataJson } = await callOmdbApi(apiUrlQuery);\r\n\r\n  $divSearchLoader.classList.add('none');\r\n  $moviesDiv.classList.remove('none');\r\n\r\n  if (dataJson.Response === 'False') {\r\n   $lastResultDiv.classList.add('none');\r\n   $paginationDiv.classList.add('none');\r\n   throw new Error(`${dataJson.Error}`);\r\n  }\r\n\r\n  if (dataJson.Response === 'True' && dataJson.Search) {\r\n   movies = dataJson.Search;\r\n   totalMovies = dataJson.totalResults;\r\n   totalPages = Math.ceil(totalMovies / globalVariables.moviesForPage);\r\n\r\n   $lastResultDiv.classList.remove('none');\r\n   $lastResultSpan.textContent = totalMovies;\r\n   $moviesDiv.textContent = '';\r\n\r\n   //* Pagination\r\n   //* ---------------------------------------------------------------------------------\r\n   pagination(totalPages);\r\n   //* ---------------------------------------------------------------------------------\r\n\r\n   movies.forEach((movie) => {\r\n    const $movieDiv = d.createElement('div');\r\n    $movieDiv.classList.add('main-search__movies__movie');\r\n\r\n    //* Botón favoritos\r\n    //* -------------------------------------------------------------------\r\n    const $movieButton = d.createElement('button');\r\n    $movieButton.classList.add('main-search__movies__movie__button');\r\n\r\n    //* De ser un favorito en LS, coloca el botón amarillo\r\n    //* ---------------------------------------------------------\r\n    const userID = getSessionStorage().id;\r\n    globalVariables.arrayUsers = getLocalStorage();\r\n\r\n    globalVariables.arrayUsers.find((user) => {\r\n     if (user.id === userID) {\r\n      user.favorites.find((favorite) => {\r\n       if (favorite.imdbId === movie.imdbID) {\r\n        $movieButton.classList.add('movieIsFavorite');\r\n        $favoritesDiv.classList.remove('none');\r\n       }\r\n       return false;\r\n      });\r\n     }\r\n     return false;\r\n    });\r\n    //* ---------------------------------------------------------\r\n\r\n    $movieButton.textContent = starIcon;\r\n    $movieButton.setAttribute('data-imdbId', movie.imdbID);\r\n    //* -------------------------------------------------------------------\r\n\r\n    const $movieImage = d.createElement('img');\r\n    $movieImage.classList.add('main-search__movies__movie__image');\r\n    $movieImage.src = movie.Poster !== 'N/A' ? movie.Poster : 'assets/img/no-image.jpg';\r\n    $movieImage.alt = movie.Title ? movie.Title : 'No title';\r\n    $movieImage.setAttribute('data-imdbId', movie.imdbID);\r\n\r\n    const $movieSpanTitle = d.createElement('span');\r\n    $movieSpanTitle.classList.add('main-search__movies__movie__spanTitle');\r\n    $movieSpanTitle.textContent = movie.Title ? movie.Title : 'No title';\r\n\r\n    const $movieSpanYear = d.createElement('span');\r\n    $movieSpanYear.classList.add('main-search__movies__movie__spanYear');\r\n    $movieSpanYear.textContent = movie.Year ? movie.Year : 'No Year';\r\n\r\n    const $movieSpanType = d.createElement('span');\r\n    $movieSpanType.classList.add('main-search__movies__movie__spanType');\r\n    $movieSpanType.textContent = movie.Type ? movie.Type : 'No Type';\r\n\r\n    const $movieSpanImdbId = d.createElement('span');\r\n    $movieSpanImdbId.classList.add('main-search__movies__movie__spanImdbId');\r\n    $movieSpanImdbId.setAttribute('data-imdbId', movie.imdbID);\r\n\r\n    $movieDiv.appendChild($movieButton);\r\n    $movieDiv.appendChild($movieImage);\r\n    $movieDiv.appendChild($movieSpanTitle);\r\n    $movieDiv.appendChild($movieSpanYear);\r\n    $movieDiv.appendChild($movieSpanType);\r\n    $movieDiv.appendChild($movieSpanImdbId);\r\n\r\n    $fragment.appendChild($movieDiv);\r\n   });\r\n   $moviesDiv.appendChild($fragment);\r\n  }\r\n } catch (Error) {\r\n  const ErrorMessage = Error.toString();\r\n  let ErrorCode;\r\n  let messageUser;\r\n\r\n  if (ErrorMessage === 'Error: Movie not found!') {\r\n   messageUser = `\r\n        <p>Lo sentimos, sin resultados...</p>\r\n        <p>Movie not found!</p>\r\n      `;\r\n  } else if (ErrorMessage === \"TypeError: Cannot read property 'Response' of undefined\") {\r\n   ErrorCode = '002';\r\n   messageUser = `\r\n        <p>ERROR CODE: ${ErrorCode}</p>\r\n        <p>SIN DATA NI RESPUESTA DE LA APLICACIÓN</p>\r\n        <p>VALIDE LA CONEXIÓN A INTERNET</p>\r\n      `;\r\n  } else {\r\n   messageUser = `<p>${ErrorMessage}</p>`;\r\n  }\r\n\r\n  if (w.location.pathname === '/search.html') {\r\n   $moviesDiv.innerHTML = '';\r\n   $errorMessageContainerSearch.classList.remove('none');\r\n   $errorMessageContainerSearch.innerHTML = '';\r\n   $errorMessageContainerSearch.innerHTML = messageUser;\r\n  }\r\n }\r\n};\r\n\r\nexport default showMovies;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNSIÓN QUE MUESTRA DETALLE DE PELÍCULA EN VENTANA MODAL \"search.html\"\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, starIcon, globalVariables } from '../global/global-variables';\r\nimport callOmdbApi from '../omdb-api/call-omdb-api';\r\nimport { getLocalStorage, getSessionStorage } from '../storage/local-session-storage';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $divSearchLoader = d.getElementById('search-loader');\r\nconst $modalMovies = d.getElementById('modalMovies');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (showMovieModal)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst showMovieModal = async (apiUrlQuery) => {\r\n $divSearchLoader.classList.remove('none');\r\n const $fragment = d.createDocumentFragment();\r\n\r\n try {\r\n  const { dataJson } = await callOmdbApi(apiUrlQuery);\r\n\r\n  $divSearchLoader.classList.add('none');\r\n\r\n  if (dataJson.Response === 'False') throw new Error(`${dataJson.Error}`);\r\n\r\n  if (dataJson.Response === 'True') {\r\n   const $movieDiv = d.createElement('div');\r\n   $movieDiv.classList.add('main-search__modal-movies__movieContent');\r\n\r\n   //* ---------------------------------------------------------------------------------------\r\n   const $movieDivImgageButton = d.createElement('div');\r\n   $movieDivImgageButton.classList.add('main-search__modal-movies__movieContent__imageButton');\r\n\r\n   const $movieImage = d.createElement('img');\r\n   $movieImage.classList.add('main-search__modal-movies__movieContent__imageButton__image');\r\n   $movieImage.src = dataJson.Poster !== 'N/A' ? dataJson.Poster : 'assets/img/no-image.jpg';\r\n   $movieImage.alt = dataJson.Title ? dataJson.Title : 'No title';\r\n   $movieImage.setAttribute('data-imdbId', dataJson.imdbID);\r\n\r\n   const $movieButton = d.createElement('button');\r\n   $movieButton.classList.add('main-search__modal-movies__movieContent__imageButton__button');\r\n\r\n   //* De ser un favorito en LS, coloca el botón amarillo\r\n   //* ---------------------------------------------------------\r\n   const userID = getSessionStorage().id;\r\n   globalVariables.arrayUsers = getLocalStorage();\r\n\r\n   globalVariables.arrayUsers.find((user) => {\r\n    if (user.id === userID) {\r\n     user.favorites.find((favorite) => {\r\n      if (favorite.imdbId === dataJson.imdbID) {\r\n       $movieButton.classList.add('movieIsFavorite');\r\n      }\r\n      return false;\r\n     });\r\n    }\r\n    return false;\r\n   });\r\n   //* ---------------------------------------------------------\r\n\r\n   $movieButton.textContent = starIcon;\r\n   $movieButton.setAttribute('data-imdbId', dataJson.imdbID);\r\n\r\n   $movieDivImgageButton.appendChild($movieImage);\r\n   $movieDivImgageButton.appendChild($movieButton);\r\n   $movieDiv.appendChild($movieDivImgageButton);\r\n   //* ---------------------------------------------------------------------------------------\r\n\r\n   //* ---------------------------------------------------------------------------------------\r\n   const $movieDivInfo = d.createElement('div');\r\n   $movieDivInfo.classList.add('main-search__modal-movies__movieContent__info');\r\n\r\n   const $movieSpanTitle = d.createElement('span');\r\n   $movieSpanTitle.classList.add('main-search__modal-movies__movieContent__info__spanTitle');\r\n   $movieSpanTitle.textContent = dataJson.Title ? dataJson.Title : 'No title';\r\n\r\n   const $movieSpanYear = d.createElement('span');\r\n   $movieSpanYear.classList.add('main-search__modal-movies__movieContent__info__spanYear');\r\n   $movieSpanYear.textContent = dataJson.Year ? dataJson.Year : 'No Year';\r\n\r\n   const $movieSpanType = d.createElement('span');\r\n   $movieSpanType.classList.add('main-search__movies__movie__info__spanType');\r\n   $movieSpanType.textContent = dataJson.Type ? dataJson.Type : 'No Type';\r\n\r\n   const $movieSpanRuntime = d.createElement('span');\r\n   $movieSpanRuntime.classList.add('main-search__modal-movies__movieContent__info__spanRuntime');\r\n   $movieSpanRuntime.textContent = dataJson.Runtime ? dataJson.Runtime : 'No Runtime';\r\n\r\n   const $movieSpanLanguage = d.createElement('span');\r\n   $movieSpanLanguage.classList.add('main-search__modal-movies__movieContent__info__spanLanguage');\r\n   $movieSpanLanguage.textContent = dataJson.Language ? dataJson.Language : 'No Language';\r\n\r\n   const $movieSpanGender = d.createElement('span');\r\n   $movieSpanGender.classList.add('main-search__modal-movies__movieContent__info__spanGender');\r\n   $movieSpanGender.textContent = dataJson.Genre ? dataJson.Genre : 'No Gender';\r\n\r\n   const $movieSpanCountry = d.createElement('span');\r\n   $movieSpanCountry.classList.add('main-search__modal-movies__movieContent__info__spanCountry');\r\n   $movieSpanCountry.textContent = dataJson.Country ? dataJson.Country : 'No Country';\r\n\r\n   const $movieSpanActors = d.createElement('span');\r\n   $movieSpanActors.classList.add('main-search__modal-movies__movieContent__info__spanActors');\r\n   $movieSpanActors.textContent = dataJson.Actors ? dataJson.Actors : 'No Actors';\r\n\r\n   const $movieSpanDirector = d.createElement('span');\r\n   $movieSpanDirector.classList.add('main-search__modal-movies__movieContent__info__spanDirector');\r\n   $movieSpanDirector.textContent = dataJson.Director ? dataJson.Director : 'No Director';\r\n\r\n   const $movieSpanPlot = d.createElement('span');\r\n   $movieSpanPlot.classList.add('main-search__modal-movies__movieContent__info__spanPlot');\r\n   $movieSpanPlot.textContent = dataJson.Plot ? dataJson.Plot : 'No Plot';\r\n\r\n   $movieDivInfo.appendChild($movieSpanTitle);\r\n   $movieDivInfo.appendChild($movieSpanYear);\r\n   $movieDivInfo.appendChild($movieSpanType);\r\n   $movieDivInfo.appendChild($movieSpanRuntime);\r\n   $movieDivInfo.appendChild($movieSpanLanguage);\r\n   $movieDivInfo.appendChild($movieSpanGender);\r\n   $movieDivInfo.appendChild($movieSpanCountry);\r\n   $movieDivInfo.appendChild($movieSpanActors);\r\n   $movieDivInfo.appendChild($movieSpanDirector);\r\n   $movieDivInfo.appendChild($movieSpanPlot);\r\n\r\n   $movieDiv.appendChild($movieDivInfo);\r\n   //* ---------------------------------------------------------------------------------------\r\n\r\n   $fragment.appendChild($movieDiv);\r\n   $modalMovies.innerHTML = '';\r\n   $modalMovies.appendChild($fragment);\r\n  }\r\n } catch (Error) {\r\n  const ErrorMessage = Error.toString();\r\n  let ErrorCode;\r\n  let messageUser;\r\n\r\n  if (ErrorMessage === \"TypeError: Cannot read property 'Response' of undefined\") {\r\n   ErrorCode = '002';\r\n   messageUser = `\r\n        <p>ERROR CODE: ${ErrorCode}</p>\r\n        <p>SIN DATA NI RESPUESTA DE LA APLICACIÓN</p>\r\n        <p>VALIDE LA CONEXIÓN A INTERNET</p>\r\n      `;\r\n  } else {\r\n   messageUser = `<p>${ErrorMessage}</p>`;\r\n  }\r\n\r\n  if ($modalMovies) {\r\n   $modalMovies.innerHTML = '';\r\n   $modalMovies.classList.add('modalErrorMessage');\r\n   $modalMovies.innerHTML = messageUser;\r\n  }\r\n }\r\n};\r\n\r\nexport default showMovieModal;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE MUESTRA LAS PELÍCULAS EXISTENTES EN FAVORITOS.\r\n//* Busca en el local storage los favoritos que tenga el usuario.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, starIcon, globalVariables } from '../global/global-variables';\r\nimport { getLocalStorage, getSessionStorage } from '../storage/local-session-storage';\r\nimport { END_POINT_MOVIE } from '../omdb-api/omdb-api';\r\nimport callOmdbApi from '../omdb-api/call-omdb-api';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $favoritesLoader = d.getElementById('favorites-loader');\r\nconst $favoritesMoviesContainer = d.getElementById('favoritesMoviesContainer');\r\nconst $errorMessageContainerFavorites = d.querySelector('.main-favorites__errorMessages');\r\nconst $favoritesSpan = d.getElementById('favoritesSpan');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (showFavoritesMovies)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst showFavoritesMovies = async () => {\r\n $favoritesLoader.classList.remove('none');\r\n $favoritesMoviesContainer.classList.add('none');\r\n $errorMessageContainerFavorites.classList.add('none');\r\n\r\n const $fragment = d.createDocumentFragment();\r\n const userID = getSessionStorage().id;\r\n globalVariables.arrayUsers = getLocalStorage();\r\n let counter = 0;\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  if (user.id === userID) {\r\n   if (user.favorites.length > 0) {\r\n    const totalMovies = user.favorites.length;\r\n    $favoritesSpan.textContent = totalMovies;\r\n\r\n    user.favorites.forEach(async (favorite) => {\r\n     counter += 1;\r\n     const { imdbId } = favorite;\r\n     const apiUrlQuery = `${END_POINT_MOVIE}${imdbId}`;\r\n\r\n     try {\r\n      const { dataJson } = await callOmdbApi(apiUrlQuery);\r\n\r\n      $favoritesLoader.classList.add('none');\r\n      $favoritesMoviesContainer.classList.remove('none');\r\n\r\n      if (dataJson.Response === 'False') throw new Error(`${dataJson.Error}`);\r\n\r\n      const $favoriteMovieContainer = d.createElement('div');\r\n      $favoriteMovieContainer.classList.add('main-favorites__moviesContainer__movieContainer');\r\n\r\n      const $favoriteMovieButton = d.createElement('button');\r\n      $favoriteMovieButton.classList.add('main-favorites__moviesContainer__movieContainer__button');\r\n      $favoriteMovieButton.classList.add('movieIsFavorite');\r\n      $favoriteMovieButton.textContent = starIcon;\r\n      $favoriteMovieButton.setAttribute('data-imdbId', dataJson.imdbID);\r\n      $favoriteMovieContainer.appendChild($favoriteMovieButton);\r\n\r\n      const $favoriteMovieImage = d.createElement('img');\r\n      $favoriteMovieImage.classList.add('main-favorites__moviesContainer__movieContainer__image');\r\n      $favoriteMovieImage.src =\r\n       dataJson.Poster !== 'N/A' ? dataJson.Poster : 'assets/img/no-image.jpg';\r\n      $favoriteMovieImage.alt = dataJson.Title ? dataJson.Title : 'No title';\r\n      $favoriteMovieImage.setAttribute('data-imdbId', dataJson.imdbID);\r\n      $favoriteMovieContainer.appendChild($favoriteMovieImage);\r\n\r\n      const $favoriteMovieSpanTitle = d.createElement('span');\r\n      $favoriteMovieSpanTitle.classList.add(\r\n       'main-favorites__moviesContainer__movieContainer__spanTitle',\r\n      );\r\n      $favoriteMovieSpanTitle.textContent = dataJson.Title ? dataJson.Title : 'No title';\r\n      $favoriteMovieContainer.appendChild($favoriteMovieSpanTitle);\r\n\r\n      const $favoriteMovieSpanYear = d.createElement('span');\r\n      $favoriteMovieSpanYear.classList.add(\r\n       'main-favorites__moviesContainer__movieContainer__spanYear',\r\n      );\r\n      $favoriteMovieSpanYear.textContent = dataJson.Year ? dataJson.Year : 'No Year';\r\n      $favoriteMovieContainer.appendChild($favoriteMovieSpanYear);\r\n\r\n      const $favoriteMovieSpanType = d.createElement('span');\r\n      $favoriteMovieSpanType.classList.add('main-search__movies__movie__spanType');\r\n      $favoriteMovieSpanType.textContent = dataJson.Type ? dataJson.Type : 'No Type';\r\n      $favoriteMovieContainer.appendChild($favoriteMovieSpanType);\r\n\r\n      const $favoriteMovieSpanImdbId = d.createElement('span');\r\n      $favoriteMovieSpanImdbId.classList.add('main-search__movies__movie__spanImdbId');\r\n      $favoriteMovieSpanImdbId.setAttribute('data-imdbId', dataJson.imdbID);\r\n      $favoriteMovieContainer.appendChild($favoriteMovieSpanImdbId);\r\n\r\n      $fragment.appendChild($favoriteMovieContainer);\r\n\r\n      if (counter === totalMovies) {\r\n       $favoritesMoviesContainer.appendChild($fragment);\r\n      }\r\n     } catch (Error) {\r\n      const ErrorMessage = Error.toString();\r\n      let ErrorCode;\r\n      let messageUser;\r\n\r\n      if (ErrorMessage === \"TypeError: Cannot read property 'Response' of undefined\") {\r\n       ErrorCode = '002';\r\n       messageUser = `\r\n                <p>ERROR CODE: ${ErrorCode}</p>\r\n                <p>SIN DATA NI RESPUESTA DE LA APLICACIÓN</p>\r\n                <p>VALIDE LA CONEXIÓN A INTERNET</p>\r\n              `;\r\n      } else {\r\n       messageUser = `<p>${ErrorMessage}</p>`;\r\n      }\r\n\r\n      if ($errorMessageContainerFavorites) {\r\n       $favoritesMoviesContainer.innerHTML = '';\r\n       $errorMessageContainerFavorites.classList.remove('none');\r\n       $errorMessageContainerFavorites.innerHTML = '';\r\n       $errorMessageContainerFavorites.innerHTML = messageUser;\r\n      }\r\n     }\r\n    });\r\n   }\r\n  }\r\n  return false;\r\n });\r\n};\r\n\r\nexport default showFavoritesMovies;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIONES RELACIONADAS AL TEMA DE LA APLICACIÓN (LIGHT - DARK)\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, w, sunIcon, moonIcon, globalVariables } from '../global/global-variables';\r\nimport {\r\n getLocalStorage,\r\n getSessionStorage,\r\n localStorageAddUsers,\r\n sessionStorageAddUser,\r\n} from '../storage/local-session-storage';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $selectors = d.querySelectorAll('[data-light]');\r\nconst $searchDivIcon = d.querySelector('.main-search__user__theme__icon');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN QUE APLICA EL TEMA (LIGHT)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst lightMode = (userID) => {\r\n globalVariables.arrayUsers = getLocalStorage();\r\n $selectors.forEach((ele) => ele.classList.add('lightTheme'));\r\n\r\n if (w.location.pathname.includes('/search.html')) {\r\n  $searchDivIcon.textContent = moonIcon;\r\n }\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  const userLS = user;\r\n  if (userLS.id === userID) {\r\n   userLS.theme = 'lightmode';\r\n   sessionStorageAddUser(user);\r\n   localStorageAddUsers();\r\n  }\r\n  return false;\r\n });\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN QUE APLICA EL TEMA (DARK)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst darkMode = (userID) => {\r\n globalVariables.arrayUsers = getLocalStorage();\r\n $selectors.forEach((ele) => ele.classList.remove('lightTheme'));\r\n\r\n if (w.location.pathname.includes('/search.html')) {\r\n  $searchDivIcon.textContent = sunIcon;\r\n }\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  const userLS = user;\r\n  if (userLS.id === userID) {\r\n   userLS.theme = 'darkmode';\r\n   sessionStorageAddUser(user);\r\n   localStorageAddUsers();\r\n  }\r\n  return false;\r\n });\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN QUE VALIDA SI EL USUARIO TIENE UN TEMA SELECCIONADO (LIGHT - DARK)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst validateTheme = () => {\r\n const userID = getSessionStorage().id;\r\n globalVariables.arrayUsers = getLocalStorage();\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  if (user.id === userID) {\r\n   if (user.theme === 'darkmode') {\r\n    darkMode(userID);\r\n   } else {\r\n    lightMode(userID);\r\n   }\r\n  }\r\n  return false;\r\n });\r\n};\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\nexport { validateTheme, lightMode, darkMode };\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE VALIDA CONSTANTEMENTE SI EXISTE UNA SESIÓN ACTIVA\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { getSessionStorage } from '../storage/local-session-storage';\r\nimport { redirectToLogin } from '../helpers/redirect';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (sessionValidate)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst sessionValidate = () => {\r\n const sessionActive = getSessionStorage();\r\n const pageLocation = window.location.pathname;\r\n\r\n if ((pageLocation === '/search.html' || pageLocation === '/favorites.html') && !sessionActive) {\r\n  redirectToLogin();\r\n }\r\n};\r\n\r\nexport default sessionValidate;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* 1.- FUNCIÓN QUE VALIDA EL STATUS DE LA CONEXIÓN DE RED\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, w } from '../global/global-variables';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (networkStatus)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst networkStatus = () => {\r\n const $containerNetworkStatus = d.createElement('div');\r\n const $footer = d.querySelector('.footer');\r\n const isOnLine = w.navigator.onLine;\r\n\r\n if (isOnLine) {\r\n  $containerNetworkStatus.textContent = 'nuevamente conectado';\r\n  $containerNetworkStatus.classList.add('onLine');\r\n  $containerNetworkStatus.classList.remove('offLine');\r\n  setTimeout(() => {\r\n   w.location.reload();\r\n  }, 5000);\r\n } else {\r\n  $containerNetworkStatus.textContent = 'sin conexión';\r\n  $containerNetworkStatus.classList.add('offLine');\r\n  $containerNetworkStatus.classList.remove('onLine');\r\n }\r\n\r\n $footer.insertAdjacentElement('beforeend', $containerNetworkStatus);\r\n\r\n setTimeout(() => {\r\n  $containerNetworkStatus.textContent = '';\r\n  $containerNetworkStatus.classList.remove('onLine');\r\n  $containerNetworkStatus.classList.remove('offLine');\r\n }, 5000);\r\n};\r\n\r\nexport default networkStatus;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE MANEJA EL BOTÓN DE SCROLL TOP\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, w } from '../global/global-variables';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* CONSTANTES Y VARIABLES\r\n//* ---------------------------------------------------------------------------------------------\r\nconst $scrollTopButton = d.querySelector('.scroll-top-btn');\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (scrollTopButton)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst scrollTopButton = () => {\r\n w.addEventListener('scroll', (event) => {\r\n  event.preventDefault();\r\n  const scrollTop = w.pageYOffset || d.documentElement.scrollTop;\r\n\r\n  if (scrollTop > 1500) {\r\n   $scrollTopButton.classList.remove('hidden');\r\n  } else {\r\n   $scrollTopButton.classList.add('hidden');\r\n  }\r\n });\r\n\r\n $scrollTopButton.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  w.scrollTo({\r\n   behavior: 'smooth',\r\n   top: 0,\r\n  });\r\n });\r\n};\r\n\r\nexport default scrollTopButton;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* 1.- IMPORTACIONES\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 1.1.- Modulos JavaScript\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { d, w, sunIcon, globalVariables } from './modules/global/global-variables';\r\nimport { END_POINT_MOVIE, END_POINT_MOVIES } from './modules/omdb-api/omdb-api';\r\n\r\nimport sessionValidate from './modules/session/session-validate';\r\nimport closeSession from './modules/session/close-session';\r\n\r\nimport {\r\n getSessionStorage,\r\n localStorageValidateUsers,\r\n} from './modules/storage/local-session-storage';\r\n\r\nimport formLoginDataUser from './modules/login/form-login-data-user';\r\nimport formLoginValidations from './modules/login/form-login-validations';\r\n\r\nimport {\r\n setLocalStorageLastSearch,\r\n getLocalStorageLastSearch,\r\n} from './modules/search/set-get-last-search';\r\n\r\nimport favoritesValidation from './modules/favorites/favorites-validation';\r\nimport localStorageSetDelFavorites from './modules/favorites/set-del-favorites';\r\nimport getLocalStorageTotalFavoritesMovies from './modules/favorites/get-total-favorite-movies';\r\n\r\nimport showMovies from './modules/show/show-movies';\r\nimport showMovieModal from './modules/show/show-modal';\r\nimport showLastSearchMovies from './modules/show/show-last-search-movies';\r\nimport showFavoritesMovies from './modules/show/show-favorites-movies';\r\n\r\nimport { validateTheme, lightMode, darkMode } from './modules/theme/light-dark-mode';\r\n\r\nimport networkStatus from './modules/helpers/network-status';\r\n\r\nimport { redirectToSearch, redirectToFavorites } from './modules/helpers/redirect';\r\n\r\nimport scrollTopButton from './modules/helpers/scrollTopButton';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 1.2.- Estilos CSS\r\n//* ---------------------------------------------------------------------------------------------\r\nimport '../scss/styles.scss';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 1.3.- Assets\r\n//* ---------------------------------------------------------------------------------------------\r\nimport '../assets/favicon/favicon.ico';\r\nimport '../assets/images/no-image.jpg';\r\nimport '../assets/images/oval-blanco.svg';\r\nimport '../assets/images/oval-negro.svg';\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n\r\n//* ===============================================================================================\r\n//* 2.- UBICACIÓN DE ELEMENTOS EN HTML\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 2.2.- index.html\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.2.1.- Formulario Login\r\n//* ------------------------------------------------------------------------------------------\r\nconst $formLogin = d.getElementById('formLogin');\r\nconst $formLoginLoader = d.getElementById('login-loader');\r\n//* ------------------------------------------------------------------------------------------\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 2.3.- search.html\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.3.1.- Search \"User\" (Bienvenido, Tema, Salir, Icons)\r\n//* ------------------------------------------------------------------------------------------\r\nconst $searchUser = d.querySelector('.main-search__user');\r\nconst $searchSpan = d.querySelector('.main-search__user__span');\r\n//* ------------------------------------------------------------------------------------------\r\n\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.3.2.- Search \"Favorites\" (Container, button)\r\n//* ------------------------------------------------------------------------------------------\r\nconst $favoritesButton = d.getElementById('favoritesButton');\r\n//* ------------------------------------------------------------------------------------------\r\n\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.3.3.- Search \"Search\" (Formulario, input, button, Icon)\r\n//* ------------------------------------------------------------------------------------------\r\nconst $formSearch = d.getElementById('formSearch');\r\n//* ------------------------------------------------------------------------------------------\r\n\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.3.4.- Search \"lastSearch\" (Container, span Ultima búsqueda)\r\n//* ------------------------------------------------------------------------------------------\r\nconst $lastSearchSpan = d.querySelector('.main-search__lastSearch__span');\r\n//* ------------------------------------------------------------------------------------------\r\n\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.3.5.- Search \"pagination\" (Variables, Constantes, Container, label, span)\r\n//* ------------------------------------------------------------------------------------------\r\nconst $paginationDiv = d.querySelector('.main-search__pagination');\r\n//* ------------------------------------------------------------------------------------------\r\n\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.3.6.- Search \"Movies\" (Contenedor Películas, star icon)\r\n//* ------------------------------------------------------------------------------------------\r\nconst $moviesDiv = d.getElementById('moviesDiv');\r\n//* ------------------------------------------------------------------------------------------\r\n\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.3.7.- Ventana Modal \"Movies\" (Container)\r\n//* ------------------------------------------------------------------------------------------\r\nconst $modalMovies = d.getElementById('modalMovies');\r\n//* ------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 2.4.- favorites.html\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ------------------------------------------------------------------------------------------\r\n//* 2.4.1.- Elementos de \"Favorites\" (button, span, loader, Container Movies)\r\n//* ------------------------------------------------------------------------------------------\r\nconst $favoritesButtonHome = d.getElementById('favoritesButtonHome');\r\nconst $favoritesSpan = d.getElementById('favoritesSpan');\r\nconst $favoritesMoviesContainer = d.getElementById('favoritesMoviesContainer');\r\n//* ------------------------------------------------------------------------------------------\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n\r\n//* ===============================================================================================\r\n//* 3.- FUNCIONES.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 3..1.- FUNCIÓN QUE VALIDA CONSTANTEMENTE SI EXISTE UNA SESIÓN ACTIVA\r\n//* ---------------------------------------------------------------------------------------------\r\n(() => {\r\n sessionValidate();\r\n})();\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n\r\n//* ===============================================================================================\r\n//* 4.- CÓDIGO PRINCIPAL Y EVENT LISTENER.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 4.1.- EVENTO DE ESCUCHA AL CARGAR EL DOCUMENTO.\r\n//* ---------------------------------------------------------------------------------------------\r\nd.addEventListener('DOMContentLoaded', () => {\r\n formLoginDataUser();\r\n});\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 4.2.- INDEX.HTML\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ------------------------------------------------------------------------------------------\r\n//* 4.2.1.- EVENTO DE ESCUCHA DEL SUBMIT EN FORMULARIO LOGIN (index.html).\r\n//* ------------------------------------------------------------------------------------------\r\nif (w.location.pathname.includes('/')) {\r\n if ($formLogin) {\r\n  $formLogin.addEventListener('submit', (e) => {\r\n   e.preventDefault();\r\n   $formLoginLoader.classList.remove('none');\r\n\r\n   if (formLoginValidations()) {\r\n    const userName = $formLogin.username.value.toLowerCase();\r\n    const userPassword = $formLogin.password.value;\r\n\r\n    localStorageValidateUsers(userName, userPassword);\r\n\r\n    $formLogin.reset();\r\n    $formLoginLoader.classList.add('none');\r\n   } else {\r\n    // eslint-disable-next-line no-alert\r\n    alert('Alerta submit: Posible manipulación inadecuada del html en línea');\r\n    window.location.reload();\r\n   }\r\n  });\r\n }\r\n}\r\n//* ------------------------------------------------------------------------------------------\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 4.3.- SEARCH.HTML\r\n//* ---------------------------------------------------------------------------------------------\r\nif (w.location.pathname.includes('/search.html')) {\r\n //* -------------------------------------------------------------------------------------------\r\n //* 4.3.1.- VALIDA EL TEMA (darkMode - lightMode), DEL USUARIO EN lOCAL STORAGE.\r\n //* -------------------------------------------------------------------------------------------\r\n favoritesValidation();\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 4.3.2.- CARGA DE PELÍCULAS INICIALES (ultima búsqueda del usuario o aleatorio).\r\n //* -------------------------------------------------------------------------------------------\r\n showLastSearchMovies();\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.3.- EVENTO DE ESCUCHA DEL CONTENEDOR \".main-search__user\".\r\n //*         * Se encarga de colocar el nombre del usuario en la bienvenida.\r\n //*         * Escucha por delegación de eventos el icono de tema seleccionado. (div icon).\r\n //*         * Escucha por delegación de eventos el cierre de sesión. (boton salir).\r\n //* -------------------------------------------------------------------------------------------\r\n const sessionUser = getSessionStorage();\r\n $searchSpan.textContent = sessionUser.name.toLowerCase();\r\n\r\n $searchUser.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n\r\n  if (event.target.matches('.main-search__user__button')) {\r\n   closeSession();\r\n  }\r\n\r\n  if (event.target.matches('.main-search__user__theme__icon')) {\r\n   const icon = event.target.textContent;\r\n   const userID = getSessionStorage().id;\r\n\r\n   if (icon === sunIcon) {\r\n    lightMode(userID);\r\n   } else {\r\n    darkMode(userID);\r\n   }\r\n  }\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.4.- EVENTO DE ESCUCHA DEL BOTÓN FAVORITOS.\r\n //*         * Detecta el click y dirige hacia la página de favoritos (favorites.html).\r\n //* -------------------------------------------------------------------------------------------\r\n $favoritesButton.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  redirectToFavorites();\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.5.- EVENTO DE ESCUCHA DEL SUBMIT EN FORMULARIO SEARCH.\r\n //* -------------------------------------------------------------------------------------------\r\n $formSearch.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  globalVariables.page = 1;\r\n  const userQuery = $formSearch.search.value.toLowerCase();\r\n  const apiUrlQuery = `${END_POINT_MOVIES}${userQuery}`;\r\n  $formSearch.reset();\r\n  setLocalStorageLastSearch(userQuery);\r\n  showMovies(apiUrlQuery);\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.6.- EVENTO DE ESCUCHA DE LA ULTIMA BÚSQUEDA DEL USUARIO.\r\n //*         * Al hacer click en el span de la ultima búsqueda la coloca en el input.\r\n //*         * Coloca el foco en el input.\r\n //* -------------------------------------------------------------------------------------------\r\n $lastSearchSpan.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  const lastSearch = event.target.textContent;\r\n  $formSearch.search.value = lastSearch;\r\n  $formSearch.search.focus();\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.7.- EVENTO DE ESCUCHA BOTONES DE PAGINACIÓN.\r\n //* -------------------------------------------------------------------------------------------\r\n $paginationDiv.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  const lastSearch = getLocalStorageLastSearch();\r\n\r\n  if (event.target.matches('.main-search__pagination__last')) {\r\n   globalVariables.page -= 1;\r\n  } else if (event.target.matches('.main-search__pagination__next')) {\r\n   globalVariables.page += 1;\r\n  }\r\n\r\n  const apiUrlQuery = `${END_POINT_MOVIES}${lastSearch}&page=${globalVariables.page}`;\r\n  showMovies(apiUrlQuery);\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.8.- EVENTO DE ESCUCHA BOTÓN FAVORITOS DE LA PELÍCULA  EN \"moviesDiv\".\r\n //* -------------------------------------------------------------------------------------------\r\n $moviesDiv.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  const $element = event.target;\r\n\r\n  if ($element.matches('.main-search__movies__movie__button')) {\r\n   $element.classList.toggle('movieIsFavorite');\r\n\r\n   const imdbId = $element.getAttribute('data-imdbId');\r\n   localStorageSetDelFavorites(imdbId);\r\n  }\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.9.- EVENTO DE ESCUCHA IMAGEN DE PELÍCULA EN \"moviesDiv\" - (VENTANA MODAL).\r\n //*         * Escucha el click en contenedor de películas.\r\n //*         * Al hacer click en la imagen de película, abre la ventana modal.\r\n //*         * Realiza una nueva llamada a la api y muestra en modal los resultados.\r\n //* -------------------------------------------------------------------------------------------\r\n $moviesDiv.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  const $element = event.target;\r\n\r\n  if ($element.classList.contains('main-search__movies__movie__image')) {\r\n   d.body.classList.add('overflowModal');\r\n   const imdbId = $element.getAttribute('data-imdbId');\r\n   const apiUrlQuery = `${END_POINT_MOVIE}${imdbId}`;\r\n\r\n   $modalMovies.classList.add('showModal');\r\n   showMovieModal(apiUrlQuery);\r\n  }\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.10.- EVENTO DE ESCUCHA CONTENEDOR \"modalMovies\" - (VENTANA MODAL).\r\n //*         * Escuha el click en el contenedor modal.\r\n //*         * Al hacer click en el contenedor modal, cierra la ventana modal.\r\n //* -------------------------------------------------------------------------------------------\r\n $modalMovies.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  const $element = event.target;\r\n\r\n  if ($element.classList.contains('main-search__modal-movies')) {\r\n   d.body.classList.remove('overflowModal');\r\n   $modalMovies.classList.remove('showModal');\r\n  }\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.3.11.- EVENTO DE ESCUCHA DEL BOTÓN FAVORITOS DE LA PELÍCULA - (VENTANA MODAL).\r\n //*          * Escucha el click en el contenedor de películas de ventana modal.\r\n //*          * Al hacer click en el botón de favoritos, coloca en amarillo el botón, agrega\r\n //*            o quita la película de favoritos, tanto de la modal como del contenedor de\r\n //*            películas, asi como del local y session storage.\r\n //* -------------------------------------------------------------------------------------------\r\n $modalMovies.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  const $element = event.target;\r\n\r\n  if ($element.matches('.main-search__modal-movies__movieContent__imageButton__button')) {\r\n   const imdbId = $element.getAttribute('data-imdbId');\r\n   $element.classList.toggle('movieIsFavorite');\r\n\r\n   const $moviesDivMovies = $moviesDiv.querySelectorAll('.main-search__movies__movie');\r\n\r\n   $moviesDivMovies.forEach((element) => {\r\n    if (element.children[5].dataset.imdbid === imdbId) {\r\n     element.children[0].classList.toggle('movieIsFavorite');\r\n    }\r\n   });\r\n\r\n   localStorageSetDelFavorites(imdbId);\r\n  }\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n}\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 4.4.- FAVORITES.HTML\r\n//* ---------------------------------------------------------------------------------------------\r\nif (w.location.pathname.includes('/favorites.html')) {\r\n //* -------------------------------------------------------------------------------------------\r\n //* 4.4.1.- MUESTRA LAS PELÍCULAS INCLUIDAS A FAVORITOS.\r\n //* -------------------------------------------------------------------------------------------\r\n showFavoritesMovies();\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 4.4.2.- EVENTO DE ESCUCHA DEL BOTÓN HOME.\r\n //* -------------------------------------------------------------------------------------------\r\n $favoritesButtonHome.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  redirectToSearch();\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 4.4.3.- EVENTO DE ESCUCHA DEL BOTÓN FAVORITOS DE LA PELÍCULA.\r\n //*         * Escucha el contenedor de películas en favoritos.\r\n //*         * Al hacer click en el botón de favoritos:\r\n //*           - Quita el color amarillo del botón.\r\n //*           - Elimina la película del contenedor de favoritos.\r\n //*           - Elimina de favoritos en el local y session storage.\r\n //* -------------------------------------------------------------------------------------------\r\n $favoritesMoviesContainer.addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  const $element = event.target;\r\n\r\n  if ($element.matches('.main-favorites__moviesContainer__movieContainer__button')) {\r\n   const imdbId = $element.getAttribute('data-imdbId');\r\n   const $favoriteMoviesNodeList = $favoritesMoviesContainer.querySelectorAll(\r\n    '.main-favorites__moviesContainer__movieContainer',\r\n   );\r\n\r\n   $favoriteMoviesNodeList.forEach((element) => {\r\n    if (element.children[5].dataset.imdbid === imdbId) {\r\n     element.children[0].classList.toggle('movieIsFavorite');\r\n     element.children[0].parentElement.remove();\r\n    }\r\n   });\r\n\r\n   localStorageSetDelFavorites(imdbId);\r\n   $favoritesSpan.textContent = getLocalStorageTotalFavoritesMovies();\r\n  }\r\n });\r\n //* -------------------------------------------------------------------------------------------\r\n}\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 4.5.- SEARCH.HTML - FAVORITES.HTML\r\n//* ---------------------------------------------------------------------------------------------\r\nif (\r\n w.location.pathname.includes('/search.html') ||\r\n w.location.pathname.includes('/favorites.html')\r\n) {\r\n //* -------------------------------------------------------------------------------------------\r\n //* 4.5.1.- LLAMA A LA FUNCIÓN \"validateTheme\".\r\n // *        * Se encarga de validar el tema (darkMode - lightMode), seleccionado por el usuario.\r\n //* -------------------------------------------------------------------------------------------\r\n validateTheme();\r\n //* -------------------------------------------------------------------------------------------\r\n\r\n //* -------------------------------------------------------------------------------------------\r\n //* 4.5.2.- LLAMA A LA FUNCIÓN \"scrollTopButton\".\r\n //*         * Se encargada de mostar el botón para ir al inicio de la página.\r\n //* -------------------------------------------------------------------------------------------\r\n scrollTopButton();\r\n //* -------------------------------------------------------------------------------------------\r\n}\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* 4.6.- INDEX.HTML - SEARCH.HTML - FAVORITES.HTML\r\n//* ---------------------------------------------------------------------------------------------\r\nif (w.location.pathname.includes('/')) {\r\n //* -------------------------------------------------------------------------------------------\r\n //* 3.7.1.- EVENTO DE ESCUCHA AL CAMBIAR EL ESTATUS DE LA CONEXIÓN DE RED.\r\n //* -------------------------------------------------------------------------------------------\r\n window.addEventListener('online', () => networkStatus());\r\n window.addEventListener('offline', () => networkStatus());\r\n //* -------------------------------------------------------------------------------------------\r\n}\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE MUESTRA LAS PELÍCULAS INMEDIATAMENTE AL ENTRAR A LA APLICACIÓN.\r\n//* Busca en el local storage la ultima búsqueda del usuario.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { globalVariables } from '../global/global-variables';\r\nimport { END_POINT_MOVIES } from '../omdb-api/omdb-api';\r\nimport { getLocalStorage, getSessionStorage } from '../storage/local-session-storage';\r\nimport { setLocalStorageLastSearch } from '../search/set-get-last-search';\r\nimport showMovies from './show-movies';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (showLastSearchMovies)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst showLastSearchMovies = () => {\r\n const userID = getSessionStorage().id;\r\n globalVariables.arrayUsers = getLocalStorage();\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  if (user.id === userID) {\r\n   let { lastSearch } = user;\r\n   let apiUrlQuery;\r\n\r\n   if (lastSearch !== '') {\r\n    apiUrlQuery = `${END_POINT_MOVIES}${lastSearch}`;\r\n    showMovies(apiUrlQuery);\r\n   } else {\r\n    lastSearch = 'series';\r\n    apiUrlQuery = `${END_POINT_MOVIES}${lastSearch}`;\r\n    setLocalStorageLastSearch(lastSearch);\r\n    showMovies(apiUrlQuery);\r\n   }\r\n  }\r\n  return false;\r\n });\r\n};\r\n\r\nexport default showLastSearchMovies;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCIÓN QUE SE ENCARGA DE CERRAR SESIÓN DE USUARIO.\r\n//* Solo elimina del sessionStorage \"session\", la cual es creada por nosotros.\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { redirectToLogin } from '../helpers/redirect';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (closeSession)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst closeSession = () => {\r\n sessionStorage.removeItem('session');\r\n redirectToLogin();\r\n};\r\n\r\nexport default closeSession;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n","//* ===============================================================================================\r\n//* FUNCION QUE REGRESA LA CANTIDAD DE PELÍCULAS DEL USUARIO CONTENIDAS EN FAVORITES\r\n//* ===============================================================================================\r\n//* ---------------------------------------------------------------------------------------------\r\n//* IMPORTACIONES\r\n//* ---------------------------------------------------------------------------------------------\r\nimport { globalVariables } from '../global/global-variables';\r\nimport { getLocalStorage, getSessionStorage } from '../storage/local-session-storage';\r\n//* ---------------------------------------------------------------------------------------------\r\n\r\n//* ---------------------------------------------------------------------------------------------\r\n//* FUNCIÓN (getLocalStorageTotalFavoritesMovies)\r\n//* ---------------------------------------------------------------------------------------------\r\nconst getLocalStorageTotalFavoritesMovies = () => {\r\n const userID = getSessionStorage().id;\r\n globalVariables.arrayUsers = getLocalStorage();\r\n let total;\r\n\r\n globalVariables.arrayUsers.find((user) => {\r\n  if (user.id === userID) {\r\n   if (user.favorites.length > 0) {\r\n    total = user.favorites.length;\r\n   } else {\r\n    total = 0;\r\n   }\r\n  }\r\n  return false;\r\n });\r\n return total;\r\n};\r\n\r\nexport default getLocalStorageTotalFavoritesMovies;\r\n//* ---------------------------------------------------------------------------------------------\r\n//* ===============================================================================================\r\n"],"sourceRoot":""}